service: sls-api

custom:
  settings:
    POSTS_TABLE: posts
    USERS_TABLE: users
    IMAGE_UPLOAD_BUCKET: images-tony-chong-1995
    region: ${self:provider.region}

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  environment: ${self:custom.settings}
  iamRoleStatements:
   - Effect: "Allow"
     Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - s3:*
     Resource:
      - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.POSTS_TABLE}"
      - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.USERS_TABLE}"
      - "arn:aws:s3:::${self:custom.settings.IMAGE_UPLOAD_BUCKET}/*"
 
functions:
  createPost:
    handler: handler.createPost
    events:
    - http:
        path: /post
        method: post
  getAllPosts:
    handler: handler.getAllPosts
    events:
    - http:
        path: /posts
        method: get
  getPosts:
    handler: handler.getPosts
    events:
    - http:
        path: /posts/{number}
        method: get
  getPost:
    handler: handler.getPost
    events:
    - http:
        path: /post/{id}
        method: get
  updatePost:
    handler: handler.updatePost
    events:
    - http:
        path: /post/{id}
        method: put
  deletePost:
    handler: handler.deletePost
    events:
    - http:
        path: /post/{id}
        method: delete
  createUser:
    handler: handler.createUser
    events:
    - http:
        path: /user
        method: post
  getUser:
    handler: handler.getUser
    events:
    - http:
        path: /user/{userName}/{password}
        method: get
  imageUpload:
    handler: handler.imageHandler
    events:
    - http:
        path: /image-upload
        method: post
        cors: true
        
resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.POSTS_TABLE}
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "userName"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "userName"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.USERS_TABLE}
    ImageUploadBucket:
      Type: AWS::S3::Bucket
      Properties:
          BucketName: ${self:custom.settings.IMAGE_UPLOAD_BUCKET}
          AccessControl: PublicReadWrite

